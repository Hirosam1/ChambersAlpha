[gd_scene load_steps=10 format=3 uid="uid://0jcgk8l20keu"]

[ext_resource type="Shader" uid="uid://cpmujfi6nxk23" path="res://scripts/shaders/tilemap_renderer.tres" id="1_h88pr"]

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_u0le4"]
load_path = "res://.godot/imported/debug_tileset.png-afd7a56ac3fa0c536d4aa0296a7cfcfd.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hh57b"]
resource_local_to_scene = true
render_priority = 0
shader = ExtResource("1_h88pr")
shader_parameter/tile_tex = SubResource("CompressedTexture2D_u0le4")
shader_parameter/tex_pos = 0
shader_parameter/tex_dims = Vector2i(3, 2)

[sub_resource type="QuadMesh" id="QuadMesh_g6a1y"]
resource_local_to_scene = true
material = SubResource("ShaderMaterial_hh57b")

[sub_resource type="BoxShape3D" id="BoxShape3D_yuvsc"]
size = Vector3(1, 1, 0.1)

[sub_resource type="Shader" id="Shader_h88pr"]
code = "shader_type spatial;
render_mode unshaded, cull_disabled;

uniform sampler2D tile_tex : source_color, filter_nearest, repeat_disable;
uniform int tex_pos;
//UV x(0->1) y(0->y)
// trUV x(1/tex_dims.x*tex_pos -> 1/tex_dims.x*(tex_pos+1)
// 		y(1/tex_dims.y*tex_pos -> 1/tex_dims.y*(tex_pos+1)
uniform ivec2 tex_dims;
vec2 get_tr_uv(vec2 uv){
	float h_step = 1.0/float(tex_dims.x), v_step = 1.0/float(tex_dims.y);
	float h_bias = float(tex_pos % int(tex_dims.x))/float(tex_dims.x);
	float v_bias = float(tex_pos/int(tex_dims.x))/float(tex_dims.y);
	return vec2(uv.x * h_step + h_bias, uv.y * v_step + v_bias);
}

void fragment() {
	vec2 tr_uv = get_tr_uv(UV);
	vec4 tex_color = texture(tile_tex,tr_uv);
	if(tex_color.a < 0.1){
		discard;
	}
	ALBEDO.rgb = tex_color.rgb;
}
"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_hpmiq"]
load_path = "res://.godot/imported/debug_tileset.png-afd7a56ac3fa0c536d4aa0296a7cfcfd.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dxgjf"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_h88pr")
shader_parameter/tile_tex = SubResource("CompressedTexture2D_hpmiq")
shader_parameter/tex_pos = 1
shader_parameter/tex_dims = Vector2i(3, 2)

[sub_resource type="QuadMesh" id="QuadMesh_txqx0"]
resource_local_to_scene = true
material = SubResource("ShaderMaterial_dxgjf")

[node name="Wall1" type="Node3D"]

[node name="Wall1" type="MeshInstance3D" parent="."]
transform = Transform3D(1, -0.000472966, 0.000267026, 0.000472979, 1, -5.94393e-05, -0.000267005, 5.95359e-05, 1, 0, 0, 0)
mesh = SubResource("QuadMesh_g6a1y")
skeleton = NodePath("../..")

[node name="StaticBody3D" type="StaticBody3D" parent="Wall1"]
transform = Transform3D(1, -5.26157e-12, 0, 1.54898e-11, 1, 9.45874e-11, 2.91038e-11, 3.63798e-12, 1, 0, 0, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Wall1/StaticBody3D"]
transform = Transform3D(0.999986, -0.00403578, 0.00344037, 0.0040158, 0.999975, 0.00580007, -0.00346367, -0.00578619, 0.999977, 0, 0, 0)
shape = SubResource("BoxShape3D_yuvsc")

[node name="Wall2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, -0.000472966, 0.000267026, 0.000472979, 1, -5.94393e-05, -0.000267005, 5.95359e-05, 1, 0, 0, 0)
mesh = SubResource("QuadMesh_txqx0")
skeleton = NodePath("../..")

[node name="StaticBody3D" type="StaticBody3D" parent="Wall2"]
transform = Transform3D(1, -5.26157e-12, 0, 1.54898e-11, 1, 9.45874e-11, 2.91038e-11, 3.63798e-12, 1, 0, 0, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Wall2/StaticBody3D"]
transform = Transform3D(0.999986, -0.00403578, 0.00344037, 0.0040158, 0.999975, 0.00580007, -0.00346367, -0.00578619, 0.999977, 0, 0, 0)
shape = SubResource("BoxShape3D_yuvsc")
